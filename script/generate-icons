#!/usr/bin/env node

const path = require("path");
const cheerio = require("cheerio");
const sharp = require("sharp");
const octicons = require("@primer/octicons");
const fs = require("fs");

const toConvert = [
  "person",
  "organization",
  "repo",
  "git-pull-request",
  "git-pull-request-closed",
  "git-pull-request-draft",
  "git-merge",
  "issue-opened",
  "issue-closed",
  "issue-draft",
  "skip",
  "repo-clone",
];

convertSVGs()
  .then(() => process.exit(0))
  .catch((err) => {
    console.error(err);
    process.exit(1);
  });

function convertSVGs() {
  const defaultDPI = 72;
  const originalSize = 16;
  const targetSize = 512;
  const density = (defaultDPI * targetSize) / originalSize;
  const outputPath = path.join(__dirname, "..", "assets");
  conversions = toConvert.map(async (name) => {
    const pngPath = path.join(outputPath, `${name}.png`);
    const svgData = octicons[name].toSVG();
    const $svg = cheerio.load(svgData, { xmlMode: true });
    $svg("svg").attr("fill", "#FFF");
    const coloredSvgData = $svg.html();
    await sharp(Buffer.from(coloredSvgData), { density })
      .resize(512)
      .png()
      .toFile(pngPath);
  });
  conversions.push((async () => {
    const svgPath = path.join(outputPath, `rocket.svg`);
    const svgData = octicons["rocket"].toSVG();
    const $svg = cheerio.load(svgData, { xmlMode: true });
    $svg("svg").attr("fill", "#FFF");
    const coloredSvgData = $svg.html();
    await fs.promises.writeFile(svgPath, coloredSvgData);
  })());
  return Promise.all(conversions)
}
